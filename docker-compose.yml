version: "3.7" #https://docs.docker.com/compose/compose-file/compose-versioning/

#Docker Networks
networks:
  laravel_net:
    name: ${NETWORK_NAME_PROD}
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local

# Workflow
services:
  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      # Port for xdebug (ensure this matches the remote_port in the xdebug.ini)
      - "9001:9001"
    volumes:
      - ./www/laravel.loc:/var/www/html:delegated
      - ./docker-logs/nginx:/var/log/nginx
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./compose/nginx/default.conf:/etc/nginx/conf.d/default.conf
#       ADD ./compose/nginx/nginx.conf /etc/nginx/nginx.conf
#       ADD ./compose/nginx/default.conf /etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29 # Имя образа и его версия
    container_name: "${PROJECT_PREFIX_PROD}_mysql" # Имя контейнера, по котому к нему можно обратиться
    restart: unless-stopped # Всегда перезапускайте контейнер, если он останавливается, за исключением того, что при остановке контейнера (вручную или иным образом) он не перезапускается даже после перезапуска демона Docker.always
    tty: true #подключает виртуальную консоль. Это нужно, чтобы команда cat не завершала работу, иначе контейнер остановится.
    ports:
      - "3306:3306" # Порты, которые пробросили локальныйПорт:портКонтейнера
    environment: # Переменные из .env
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      #- ./compose/mysql/my.cnf:/etc/mysql/my.cnf # Конфиги
      - dbdata:/var/lib/mysql/ # Место где БД хранится, можно и локальный волум.
      - ./docker-logs/mysql:/var/log/mysql
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: secret
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - mysql
    ports:
    - "8081:80"
    volumes:
      - /sessions
    networks:
      - laravel
    links:
      - mysql

  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    volumes:
      - ./www/laravel.loc:/var/www/html:delegated
      # Enable xdebug
      - ./compose/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      # Custom php.ini
      - ./compose/php/config/php.ini-dev:/usr/local/etc/php/php.ini
      # Error log
      - ./docker-logs/php/php_errors.log:/var/log/php_errors.log
      - ./docker-logs/php/fpm-php.www.log:/var/log/fpm-php.www.log
    
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./www/laravel.loc:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:15.0.1
    container_name: npm
    volumes:
      - ./www/laravel.loc:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: artisan
    volumes:
      - ./www/laravel.loc:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
